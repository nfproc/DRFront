//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DRFront.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DRFront.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   -- NOTE: Template was generated by DRFront automatically.
        ///
        ///library IEEE;
        ///use IEEE.std_logic_1164.ALL;
        ///use IEEE.std_logic_unsigned.ALL;
        ///
        ///entity DR_ENTITY_NAME is
        ///-- USER_PORT
        ///end DR_ENTITY_NAME;
        ///
        ///architecture RTL of DR_ENTITY_NAME is
        ///
        ///
        ///begin
        ///
        ///
        ///end RTL;
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DR_TEMPLATE {
            get {
                return ResourceManager.GetString("DR_TEMPLATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // NOTE: Template was generated by DRFront automatically.
        ///
        ///module DR_ENTITY_NAME (
        ///// USER_PORT
        ///);
        ///
        ///
        ///endmodule に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DR_TEMPLATE_V {
            get {
                return ResourceManager.GetString("DR_TEMPLATE_V", resourceCulture);
            }
        }
        
        /// <summary>
        ///   -- NOTE: Template was generated by DRFront automatically.
        ///
        ///library IEEE;
        ///use IEEE.std_logic_1164.ALL;
        ///use IEEE.std_logic_unsigned.ALL;
        ///
        ///entity DR_TESTBENCH is
        ///end DR_TESTBENCH;
        ///
        ///architecture TEST of DR_TESTBENCH is
        ///-- USER_COMPONENT
        ///
        ///-- USER_SIGNAL
        ///
        ///begin
        ///-- USER_UUT
        ///
        ///-- DO NOT modify/delete comments that say &quot;Define waveforms ...&quot;
        ///-- or you will lose your code when the template is updated!
        ///-- vvv Define waveforms of input signals vvv
        ///
        ///
        ///-- ^^^ Define waveforms of input signals ^^^
        ///end TEST;
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DR_TESTBENCH {
            get {
                return ResourceManager.GetString("DR_TESTBENCH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // NOTE: Template was generated by DRFront automatically.
        ///
        ///module DR_TESTBENCH ();
        ///// USER_SIGNAL
        ///
        ///// USER_UUT
        ///
        ///// DO NOT modify/delete comments that say &quot;Define waveforms ...&quot;
        ///// or you will lose your code when the template is updated!
        ///// vvv Define waveforms of input signals vvv
        ///
        ///
        ///// ^^^ Define waveforms of input signals ^^^
        ///endmodule に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DR_TESTBENCH_V {
            get {
                return ResourceManager.GetString("DR_TESTBENCH_V", resourceCulture);
            }
        }
        
        /// <summary>
        ///   -- NOTE: This file is generated by DRFront automatically. Do not modify this file.
        ///
        ///library IEEE;
        ///use IEEE.std_logic_1164.ALL;
        ///
        ///entity DR_TOP is
        ///    port ( SW                             : in  std_logic_vector(15 downto 0);
        ///           BTNC, BTNL, BTNR, BTNU, BTND   : in  std_logic;
        ///           CLK, RST                       : in  std_logic;
        ///           LD                             : out std_logic_vector(15 downto 0);
        ///           AN                             : out std_logic_vector(7 downto 0);
        ///           CA [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DR_TOP {
            get {
                return ResourceManager.GetString("DR_TOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   // NOTE: Template was generated by DRFront automatically.
        ///
        ///module DR_TOP (
        ///    input  logic [15:0] SW,
        ///    input  logic        BTNC, BTNL, BTNR, BTNU, BTND,
        ///    input  logic        CLK, RST,
        ///    output logic [15:0] LD,
        ///    output logic  [7:0] AN,
        ///    output logic        CA, CB, CC, CD, CE, CF, CG, DP);
        ///
        ///// USER_INSTANCE
        ///
        ///endmodule に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string DR_TOP_V {
            get {
                return ResourceManager.GetString("DR_TOP_V", resourceCulture);
            }
        }
        
        /// <summary>
        ///   common::send_msg_id &quot;DRFront-011&quot; &quot;INFO&quot; &quot;Running a generate-bitstream script generated by DRFront...&quot;
        ///set script_mode $rdi::mode
        ///if { $script_mode ne &quot;gui&quot; } {
        ///  start_gui
        ///}
        ///set last_wd [ pwd ]
        ///cd [ file dirname [ file normalize [ info script ] ] ]
        ///if { [current_project -quiet] ne &quot;&quot; } {
        ///  common::send_msg_id &quot;DRFront-002&quot; &quot;INFO&quot; &quot;Closing currently opened project.&quot;
        ///  while { [ current_sim -quiet ] ne &quot;&quot;} {
        ///    close_sim
        ///  }
        ///  close_project
        ///}
        ///
        ///# Check if the checkpoint files exist
        ///if { [ fil [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string GENERATE_BITSTREAM {
            get {
                return ResourceManager.GetString("GENERATE_BITSTREAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   common::send_msg_id &quot;DRFront-021&quot; &quot;INFO&quot; &quot;Running an open-hardware script generated by DRFront...&quot;
        ///set script_mode $rdi::mode
        ///if { $script_mode ne &quot;gui&quot; } {
        ///  start_gui
        ///}
        ///cd [ file dirname [ file normalize [ info script ] ] ]
        ///open_hw_manager
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OPEN_HARDWARE {
            get {
                return ResourceManager.GetString("OPEN_HARDWARE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   common::send_msg_id &quot;DRFront-001&quot; &quot;INFO&quot; &quot;Running an open-project script generated by DRFront...&quot;
        ///set script_mode $rdi::mode
        ///if { $script_mode ne &quot;gui&quot; } {
        ///  start_gui
        ///}
        ///cd [ file dirname [ file normalize [ info script ] ] ]
        ///if { [ current_project -quiet ] ne &quot;&quot; } {
        ///  common::send_msg_id &quot;DRFront-002&quot; &quot;INFO&quot; &quot;Closing currently opened project.&quot;
        ///  while { [ current_sim -quiet ] ne &quot;&quot;} {
        ///    close_sim
        ///  }
        ///  close_project
        ///}
        ///
        ///namespace eval _tcl {
        ///  proc add_fileset {} {
        ///    global source_files t [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string OPEN_PROJECT {
            get {
                return ResourceManager.GetString("OPEN_PROJECT", resourceCulture);
            }
        }
    }
}
